AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: CMS Parent Stack (Connected Mobility Solution)

Metadata:
  AWS::CloudFormation::Interface:
    ParamterGroup:
      -
        Label:
          default: "Deployment Configuration"
        Parameters:
          - AdministratorEmail
          - ArtifactsBucket
          - CopyAssetsFromSource
          - Environment
          - KmsKeyId
          - KmsKeyOwner

    ParameterLabels:
      Administrator Email:
        default: "Email of the Admin User"
      Artifacts Bucket:
        default: "CDF Core Resources Bucket Name (i.e. templates, logs ...)"
      Copy Assets From Source ?:
        default: "Copy CDF Auto Simulation Modules and UI from source"
      Environment:
        default: "Environment Name i.e. (development/stage)"
      KmsKeyId:
        default: ""
      Kms Key Owner:
        default: ""

Parameters:
  AdministratorEmail:
    Type: String
    Description: "Email address for CDF Auto administrator"
    AllowedPattern: "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$"

  ArtifactsBucket:
    Description: Bucket Name referencing all CDF Resources
    Type: String

  ArtifactsConfigPrefix:
    Description:  Key prefix within bucket where config artifacts are uploaded to.
    Type: String
    Default: 'config/'

  BastionKeyPairName:
    Description: Bastion Key Pair name
    Type: String

  CopyAssetsFromSource:
    Description: Specified if the simulation modules, UI needs to be coppied from source
    Default: 'true'
    Type: String
    AllowedValues: [true, false]

  EnableApiGatewayAccessLogs:
    Description: Enales API gateway Access Logging, defaults to true if not specified.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    MinLength: 1

  Environment:
    Description: Name of environment.  Used to name the created resources.
    Type: String
    MinLength: 1
    Default: "development"

  ExistingVpcId:
    Description: |
      ID of an existing VPC to deploy CMS (if using AuthType = 'Private') and/or AssetLibrary (if AssetLibraryMode = 'full') into.
      A new VPC will be created if not provided.
    Type: String
    Default: 'N/A'
  ExistingCDFSecurityGroupId:
    Description: |
      ID of an existing security group to deploy CMS and/or AssetLibrary into if an existing VPC is to be used.
      A new security group will be created if not provided.
    Type: String
    Default: 'N/A'
  ExistingPrivateSubNetIds:
    Description: |
      ID of existing private subnetIds to deploy CMS and/or AssetLibrary into if an existing VPC is to be used.
      New private subnets will be created if not provided.
    Type: String
    Default: 'N/A'
  ExistingPrivateRouteTableIds:
    Description: |
      ID of existing private route tables to deploy AssetLibrary into if an existing VPC is to be used.
      New private route tables will be created if not provided.
    Type: String
    Default: 'N/A'
  ExistingPrivateApiGatewayVPCEndpoint:
    Description: |
      ID of existing VPC endpoint to deploy CDF and/or AssetLibrary into if an existing VPC is to be used.
      New VPC endpoint will be created if not provided.
    Type: String
    Default: 'N/A'

  JMeterRepoURI:
    Description: JMeter repository URI for the simulation launcher docker image.
    Type: String
    Default: 'N/A'

  KmsKeyId:
    Description: The KMS key ID used to encrypt SSM parameters. If not provided, one will be created.
    Type: String

  KmsKeyOwner:
    Description: The username of the owner to assign to KMS key creation of an existing KMS Key is not to be used.
    Type: String

Resources:

  Cloudfront:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./cloudformation/cfn-cms-cloudfront.yaml

  Authorizer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./cloudformation/cfn-cms-authorizer.yaml
      Parameters:
        CloudfrontDomain: !GetAtt Cloudfront.Outputs.CloudfrontDomain

  InfrastructurePre:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./cloudformation/cfn-cms-infrastructure-pre.yaml
      Parameters:
        ArtifactsBucket: !Ref ArtifactsBucket
        CopyAssetsFromSource: !Ref CopyAssetsFromSource
        Environment: !Ref Environment

  CDF:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../../cdf-core/source/infrastructure/cfn-cdf-core-parent.yaml
      Parameters:
        Environment: !Ref Environment
        ArtifactsBucket: !Ref ArtifactsBucket
        KmsKeyId: !Ref KmsKeyId
        KmsKeyOwner: !Ref KmsKeyOwner
        TemplateSnippetS3UriBase: !GetAtt InfrastructurePre.Outputs.TemplateSnippetS3UriBase
        AuthType: !GetAtt Authorizer.Outputs.AuthType
        ApiGatewayDefinitionTemplate: !GetAtt InfrastructurePre.Outputs.ApiGatewayDefinitionTemplate
        CognitoUserPoolArn: !GetAtt Authorizer.Outputs.UserPoolArn
        BastionKeyPairName: !Ref BastionKeyPairName
        EnableApiGatewayAccessLogs: !Ref EnableApiGatewayAccessLogs
        ExistingVpcId: !Ref ExistingVpcId
        ExistingCDFSecurityGroupId: !Ref ExistingCDFSecurityGroupId
        ExistingPrivateSubNetIds: !Ref ExistingPrivateSubNetIds
        ExistingPrivateRouteTableIds: !Ref ExistingPrivateRouteTableIds
        ExistingPrivateApiGatewayVPCEndpoint: !Ref ExistingPrivateApiGatewayVPCEndpoint
        JMeterRepoURI: !Ref JMeterRepoURI
        IncludeDeviceMonitoring: 'false'
        IncludeEvents: 'false'
        IncludeGreengrassProvisioning: 'false'
        IncludeGreengrassDeployment: 'false'
        IncludeBulkCerts: 'false'
        IncludeCertificateActivator: 'false'
        IncludeCertificateVendor: 'false'
    DependsOn:
      - Cloudfront
      - Authorizer
      - InfrastructurePre

  CMS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./cloudformation/cfn-cms-core.yaml
      Parameters:
        ArtifactsBucket: !Ref ArtifactsBucket
        ApiGatewayDefinitionTemplate: !GetAtt InfrastructurePre.Outputs.ApiGatewayDefinitionTemplate
        AuthType: !GetAtt Authorizer.Outputs.AuthType
        CDFCoreAssetLibraryApiFunctionName: !GetAtt CDF.Outputs.AssetLibraryRestApiFunctionName
        CDFCoreCommandsApiFunctionName: !GetAtt CDF.Outputs.CommandsRestApiFunctionName
        CDFCoreProvisioningApiFunctionName: !GetAtt CDF.Outputs.ProvisioningRestApiFunctionName
        CDFPrivateSubNetIds: !GetAtt CDF.Outputs.CDFPrivateSubnets
        CDFSecurityGroupId: !GetAtt CDF.Outputs.CDFSecurityGroup
        CDFVpcId: !GetAtt CDF.Outputs.CDFVpcId
        CognitoUserPoolArn: !GetAtt Authorizer.Outputs.UserPoolArn
        CognitoUserPoolId: !GetAtt Authorizer.Outputs.UserPoolId
        CognitoUserPoolClientId: !GetAtt Authorizer.Outputs.UserPoolClientId
        CopyAssetsFromSource: !Ref CopyAssetsFromSource
        EnableApiGatewayAccessLogs: !Ref EnableApiGatewayAccessLogs
        Environment: !Ref Environment
        IotEndpoint: !GetAtt InfrastructurePre.Outputs.IotEndpoint
        KmsKeyId: !Ref KmsKeyId
        KmsKeyOwner: !Ref KmsKeyOwner
        TemplateSnippetS3UriBase: !GetAtt InfrastructurePre.Outputs.TemplateSnippetS3UriBase
        WebsiteBucket: !GetAtt Cloudfront.Outputs.WebsiteBucket
    DependsOn:
      - Cloudfront
      - Authorizer
      - InfrastructurePre
      - CDF

  InfrastructurePost:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./cloudformation/cfn-cms-infrastructure-post.yaml
      Parameters:
        CDFAssetLibraryFunctionName: !GetAtt CDF.Outputs.AssetLibraryRestApiFunctionName
        CDFCommandsFunctionName: !GetAtt CDF.Outputs.CommandsRestApiFunctionName
        Environment: !Ref Environment
    DependsOn:
      - Authorizer
      - InfrastructurePre
      - CMS

  AdminUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      ForceAliasCreation: true
      UserAttributes:
        - Name: email
          Value:
            Ref: AdministratorEmail
        - Name: email_verified
          Value: true
      Username:
        Fn::Select:
          - '0'
          - Fn::Split:
              - "@"
              - Ref: AdministratorEmail
      UserPoolId: !GetAtt Authorizer.Outputs.UserPoolId
    DependsOn:
      - InfrastructurePost

Outputs:

  KmsKeyId:
    Description: Kms Key Id specified for services
    Value: !GetAtt CMS.Outputs.KmsKeyId
    Export:
      Name: !Sub "${AWS::StackName}-kmsKeyId"

  UserPoolId:
    Description: CMS Cognito User Pool
    Value: !GetAtt Authorizer.Outputs.UserPoolId
    Export:
      Name: !Sub "${AWS::StackName}-userPoolId"
  UserPoolArn:
    Description: CMS Cognito User Pool Arn
    Value: !GetAtt Authorizer.Outputs.UserPoolArn
    Export:
      Name: !Sub "${AWS::StackName}-userPoolArn"
  UserPoolClientId:
    Description: CMS Cognito User Pool Client ID
    Value: !GetAtt Authorizer.Outputs.UserPoolClientId
    Export:
      Name: !Sub "${AWS::StackName}-userPoolClientId"

  WebsiteBucket:
    Description: CMS Website Bucket
    Value: !GetAtt Cloudfront.Outputs.WebsiteBucket
    Export:
      Name: !Sub "${AWS::StackName}-websiteBucket"

  CloudfrontDomain:
    Description: CMS Website Bucket
    Value: !GetAtt Cloudfront.Outputs.CloudfrontDomain
    Export:
      Name: !Sub "${AWS::StackName}-cloudfrontDomain"

  CertificateId:
    Description: Iot Certificate Id
    Value: !GetAtt InfrastructurePre.Outputs.CertificateId
    Export:
      Name: !Sub "${AWS::StackName}-certificateId"

  KmsKeyId:
    Description: Kms Key Id specified for services
    Value: !GetAtt CMS.Outputs.KmsKeyId

  FacadeApiGatewayHost:
    Description: Facade Api Gateway Host
    Value: !GetAtt CMS.Outputs.FacadeApiGatewayHost
    Export:
      Name: !Sub "${AWS::StackName}-facade-apiGatewayHost"
  FacadeApiGatewayUrl:
    Description: Facade Api Gateway Url
    Value: !GetAtt CMS.Outputs.FacadeApiGatewayUrl
    Export:
      Name: !Sub "${AWS::StackName}-facade-apiGatewayUrl"
  FacadeRestApiFunctionName:
    Description: Facade Rest API Function Name
    Value: !GetAtt CMS.Outputs.FacadeRestApiFunctionName
    Export:
      Name: !Sub "${AWS::StackName}-facade-restApiFunctionName"

  FleetmanagerApiGatewayHost:
    Description: Fleetmanager Api Gateway Host
    Value: !GetAtt CMS.Outputs.FleetmanagerApiGatewayHost
    Export:
      Name: !Sub "${AWS::StackName}-fleetmanager-apiGatewayHost"
  FleetmanagerApiGatewayUrl:
    Description: Fleetmanager Api Gateway Url
    Value: !GetAtt CMS.Outputs.FleetmanagerApiGatewayUrl
    Export:
      Name: !Sub "${AWS::StackName}-fleetmanager-apiGatewayUrl"
  FleetmanagerApiFunctionName:
    Description: Fleetmanager Rest API Function Name
    Value: !GetAtt CMS.Outputs.FleetmanagerRestApiFunctionName
    Export:
      Name: !Sub "${AWS::StackName}-fleetmanager-restApiFunctionName"
