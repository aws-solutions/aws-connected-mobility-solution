AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: CMS - Core

Parameters:

  ArtifactsBucket:
    Description: Bucket Name referencing all CDF Resources
    Type: String

  ArtifactsConfigPrefix:
    Description:  Key prefix within bucket where config artifacts are uploaded to.
    Type: String
    Default: 'config/'

  ApiGatewayDefinitionTemplate:
    Description: |
      Name of the API Gateway Cloudformation definition along with the authorization method to use.  Use one of the provided
      templates to implement no auth, private, api key, lambda request, lamdba token, or Cognito auth, or modify one to meet your own
      authentization requirements.  The template must exist within the provided TemplateSnippetS3UriBase location.
    Default: 'cfn-apiGateway-noAuth.yaml'
    Type: String
    MinLength: 1

  AuthorizerFunctionArn:
    Description: Lambda authorizer function arn.  Only required if AuthType is set to 'LambdaRequest' or 'LambdaToken'.
    Type: String
    Default: 'N/A'

  AuthType:
    Description: Authorization type to apply to the API gateway endpoints
    Type: String
    Default: None
    AllowedValues:
      - None
      - Private
      - Cognito
      - LambdaRequest
      - LambdaToken
      - ApiKey
      - IAM
    MinLength: 1

  CDFCoreAssetLibraryApiFunctionName:
    Description: CDF Core AssetLibrary Rest API Function Name
    Type: String

  CDFCoreCommandsApiFunctionName:
    Description: CDF Core Commands Rest API Function Name
    Type: String

  CDFCoreProvisioningApiFunctionName:
    Description: CDF Core Provisioning Rest API Function Name
    Type: String

  CDFPrivateSubNetIds:
    Description: Comma delimited list of private subnetIds to deploy the API into. Only required if AuthType = 'Private'.
    Type: String

  CDFSecurityGroupId:
    Description: ID of an existing CDF security group to deploy the API into. Only required if AuthType = 'Private'.
    Type: String

  CDFVpcId:
    Description: ID of VPC to deploy the API into. Only required if AuthType = 'Private'.
    Type: String

  CognitoUserPoolArn:
    Description: Cognito user pool arn.  Only required if AuthType is set to 'Cognito'.
    Type: String
    Default: 'N/A'

  CognitoUserPoolId:
    Description: Cognito User Pool Id
    Type: String

  CognitoUserPoolClientId:
    Description: Cognito User pool Client Id
    Type: String

  CopyAssetsFromSource:
    Description: Specified if the simulation modules, UI needs to be coppied from source
    Default: false
    Type: String
    AllowedValues: [true, false]

  EnableApiGatewayAccessLogs:
    Description: Enales API gateway Access Logging, defaults to false if not specified.
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    MinLength: 1

  Environment:
    Description: Name of environment.  Used to name the created resources.
    Type: String
    MinLength: 1
    Default: "development"

  IotEndpoint:
    Description: Iot Endpoint
    Type: String

  KmsKeyId:
    Description: The KMS key ID used to encrypt SSM parameters. If not provided, one will be created.
    Type: String

  KmsKeyOwner:
    Description: The username of the owner to assign to KMS key creation of an existing KMS Key is not to be used.
    Type: String

  TemplateSnippetS3UriBase:
    Description: |
      S3 uri of directory where template snippets are stored for the account.
    Type: String
    MinLength: 1

  WebsiteBucket:
    Type: String
    Description: Bucket Name of CMS Website

Conditions:
  CreateKmsKey: !Equals [ !Ref KmsKeyId, "" ]

Resources:
  CustomResourceLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../packages/cdf-clients/core/deployment-helper/bundle.zip
      Handler: packages/cdf-clients/core/deployment-helper/dist/lambda_custom_resource_proxy.handler
      MemorySize: 512
      Role: !GetAtt CustomResourceLambdaRole.Arn
      Runtime: nodejs12.x
      Timeout: 60
      Tracing: Active
      Environment:
          Variables:
            NODE_CONFIG_DIR: 'packages/cdf-clients/core/deployment-helper/dist/config'

  CustomResourceLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Description: 'CDF Core application configuration override'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/AWSIoTFullAccess
        - !Ref CustomResourceLambdaPolicies

  CustomResourceLambdaPolicies:
    Type: 'AWS::IAM::ManagedPolicy'
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W13
            reason: "This is a custom lambda function required for defining configurations."
    Properties:
      Description: 'CDF Core application configuration override'
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: "iampassrole"
            Action:
              - "iam:PassRole"
            Effect: Allow
            Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/cdf-*"
          - Effect: Allow
            Action:
              - 's3:ListBucket'
              - 's3:GetObject'
            Resource:
              - !Sub 'arn:aws:s3:::${ArtifactsBucket}'
          - Action:
              - "ec2:DescribeVpcEndpoints"
            Effect: Allow
            Resource: "*"
          - Sid: "lambda"
            Action:
              - "lambda:AddPermission"
              - "lambda:CreateEventSourceMapping"
              - "lambda:DeleteEventSourceMapping"
              - "lambda:ListEventSourceMappings"
            Effect: Allow
            Resource: '*'
          - Action:
              - "lambda:Invoke*"
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cdf-*'

  FacadeApplicationConfigOverride:
    Type: Custom::ApplicationConfigOverride
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      BucketName: !Ref ArtifactsBucket
      Environment: !Ref Environment
      Key: !Sub '${ArtifactsConfigPrefix}${Environment}/facade.json'

  CvraApplicationConfigOverride:
    Type: Custom::ApplicationConfigOverride
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      BucketName: !Ref ArtifactsBucket
      Environment: !Ref Environment
      Key: !Sub '${ArtifactsConfigPrefix}${Environment}/cvra.json'

  KmsKey:
    Type: AWS::KMS::Key
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F19
            reason: "By default EnableKeyRotation is not enabled. Customer can enable it based on their rotation schedule if required."
    Condition: CreateKmsKey
    Properties:
      Description: CMS encryption key
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions for key owner
            Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/${KmsKeyOwner}'
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/${KmsKeyOwner}'
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
          - Sid: Allow services to get information about the CMK
            Effect: Allow
            Principal:
              Service:
                - dynamodb.amazonaws.com
                - kinesis.amazonaws.com
                - sns.amazonaws.com
                - sqs.amazonaws.com
                - iot.amazonaws.com
            Action:
              - kms:Describe*
              - kms:Get*
              - kms:List*
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"

  ElasticsearchServiceLinkedRole:
    Type: 'AWS::IAM::ServiceLinkedRole'
    Properties:
      AWSServiceName: es.amazonaws.com
      Description: 'SLR for ES domains'

  Facade:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../packages/cdf-auto-facade/infrastructure/cfn-cdf-auto-facade.yaml
      Parameters:
        ApiGatewayDefinitionTemplate: !Ref ApiGatewayDefinitionTemplate
        ApplicationConfigurationOverride: !GetAtt FacadeApplicationConfigOverride.config
        AssetLibraryFunctionName: !Ref CDFCoreAssetLibraryApiFunctionName
        AuthType: !Ref AuthType
        CDFSecurityGroupId: !Ref CDFSecurityGroupId
        CognitoUserPoolArn: !Ref CognitoUserPoolArn
        EnableApiGatewayAccessLogs: !Ref EnableApiGatewayAccessLogs
        Environment: !Ref Environment
        CommandsFunctionName: !Ref CDFCoreCommandsApiFunctionName
        IotEndpoint: !Ref IotEndpoint
        PrivateSubnetIds: !Ref CDFPrivateSubNetIds
        ProvisioningFunctionName: !Ref CDFCoreProvisioningApiFunctionName
        TemplateSnippetS3UriBase: !Ref TemplateSnippetS3UriBase
        VpcId: !Ref CDFVpcId

  Cvra:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../packages/cvra/infrastructure/cfn-cms-cvra.yaml
      Parameters:
        ApplicationConfigurationOverride: !GetAtt CvraApplicationConfigOverride.config
        AssetLibraryFunctionName: !Ref CDFCoreAssetLibraryApiFunctionName
        Environment: !Ref Environment
        KmsKeyId: !If [ CreateKmsKey, !Ref KmsKey, !Ref KmsKeyId ]

  FleetManagerBackend:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../packages/fleetmanager-backend/infrastructure/build/sam.json
      Parameters:
        AssetLibraryFunctionName: !Ref CDFCoreAssetLibraryApiFunctionName
        CDFSecurityGroupId: !Ref CDFSecurityGroupId
        CognitoUserPoolArn: !Ref CognitoUserPoolArn
        CommandsFunctionName: !Ref CDFCoreCommandsApiFunctionName
        EnableApiGatewayAccessLogs: !Ref EnableApiGatewayAccessLogs
        Environment: !Ref Environment
        KmsKeyId: !If [ CreateKmsKey, !Ref KmsKey, !Ref KmsKeyId ]
        PrivateSubnetIds: !Ref CDFPrivateSubNetIds
        VehicleAnomalyTableStreamArn: !GetAtt Cvra.Outputs.VehicleAnomalyTableStreamArn
        VpcId: !Ref CDFVpcId

  FleetManagerUI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../../packages/fleetmanager-ui/infrastructure/cfn-cms-fleetmanager-ui.yaml
      Parameters:
        Environment: !Ref Environment
        FleetmanagerApiGatewayUrl: !GetAtt FleetManagerBackend.Outputs.FleetmanagerApiGatewayUrl
        UserPoolId: !Ref CognitoUserPoolId
        UserPoolClientId: !Ref CognitoUserPoolClientId
        CopyAssetsFromSource: !Ref CopyAssetsFromSource
        WebsiteBucket: !Ref WebsiteBucket

Outputs:
  KmsKeyId:
    Description: Kms Key Id specified for services
    Value: !If [ CreateKmsKey, !Ref KmsKey, !Ref KmsKeyId ]

  FacadeApiGatewayHost:
    Description: Host for application
    Value: !GetAtt Facade.Outputs.ApiGatewayHost
  FacadeApiGatewayUrl:
    Description: URL for application
    Value: !GetAtt Facade.Outputs.ApiGatewayUrl
  FacadeRestApiFunctionName:
    Description: Lambda function name
    Value: !GetAtt Facade.Outputs.RestApiFunctionName

  FleetmanagerApiGatewayHost:
    Description: Host for application
    Value: !GetAtt FleetManagerBackend.Outputs.FleetmanagerApiGatewayHost
  FleetmanagerApiGatewayUrl:
    Description: URL for application
    Value: !GetAtt FleetManagerBackend.Outputs.FleetmanagerApiGatewayUrl
  FleetmanagerRestApiFunctionName:
    Description: Lambda function name
    Value: !GetAtt FleetManagerBackend.Outputs.APIHandlerName


